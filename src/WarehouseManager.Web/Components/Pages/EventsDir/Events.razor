@page "/events"
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<div class="events-page">
    <div class="view-toggle">
        <h1>My Events</h1>
        <div>
            <button class="btn @(isCalendarView ? "btn-secondary" : "btn-primary")"
                    @onclick="() => isCalendarView = false">
                <i class="fas fa-list"></i> List View
            </button>
            <button class="btn @(isCalendarView ? "btn-primary" : "btn-secondary")"
                    @onclick="() => isCalendarView = true">
                <i class="fas fa-calendar-alt"></i> Calendar View
            </button>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-triangle"></i> @_errorMessage
        </div>
    }

    @if (_isLoading)
    {
        <div class="loading-spinner"></div>
    }

    @if (isCalendarView)
    {
        <EventCalendarView Events="_events" OnEventClick="EditEvent" OnDateSelect="AddNewEvent"
                           OnEventUpdate="HandleEventUpdate"/>
    }
    else
    {
        <EventListView Events="_events" OnEditClick="EditEvent" OnDeleteClick="DeleteEvent"/>
        <button class="fab" @onclick="() => AddNewEvent(DateTime.Now)">
            +
        </button>
    }
</div>

<EventForm @ref="_eventForm" OnSave="HandleSaveEvent"/>